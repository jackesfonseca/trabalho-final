name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Step Actions 
        uses: actions/checkout@v3
      
      - name: Solve Dependencies
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
          run: | 
            python3 -m venv .env
            env/bin/activate
            pip3 install -r requirements.txt
            pip3 install sphinx
            pip3 install sphinx-rtd-theme
            pip install pylint
            pip install poetry

      - name: Lint Step
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
          run: pylint src

      - name: App Test
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
          run: pytest --cov

      - name: Build Doc
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
          run: |
            sphinx-apidoc -o doc .
            cd src/doc
            make html

      - name: Build Container
        run: |
          docker-compose build -t trabalho-final
          docker-compose up -d

      - name: Publish App
        uses: snok/install-poetry@v1
          run: |
            cd /poetry-tf
            poetry config pypi-token.api pypi-AgEIcHlwaS5vcmcCJDMyMmNmNDI2LThhYjQtNGVhNS1hODZiLThmMTY0MDc5YmVmZQACKlszLCI3MzYxOGRhMy0wNzFkLTRjZDktOTZlZC1jNTBmZjFmY2MyYTciXQAABiCq4M2_T2KdcgZOEaKVU_iLSU0ehfLKY3aiMeuld1ruJQ
            poetry install --no-dev
            poetry build
            poetry publish